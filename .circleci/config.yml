# .circleci/config.yml
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@3.1
  token-gen: superawesome-org/sa-gha-token-generator@1.0.2

executors:
  machine:
    machine:
      image: ubuntu-2204:2023.10.1

dependencies:
  pre:
    - curl -sS https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash

references:
  sa_config: &sa_config
    executor: machine
  
  ios_config: &ios_config
    macos:
      xcode: 14.3.1
    resource_class: macos.x86.medium.gen2
    environment:
      FL_OUTPUT_DIR: output
      LC_ALL: en_GB.UTF-8
      LANG: en_GB.UTF-8
      TERM: xterm-256color
  
  configure_google_services: &configure_google_services
    run:
      name: Configure Google Services
      command: |
        echo "Google Services"
        echo 'export SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_ENC="$SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_ENC"' >> $BASH_ENV
        echo $SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_ENC | base64 --decode > Example/SuperAwesome/${SA_IOS_SDKS_GOOGLE_SERVICES_PLIST_NAME}.plist
  
  # clone some scripts
  clone_scripts_repo: &clone_scripts_repo
    run:
      name: Clone scripts repo
      command: |-
        git clone https://x-access-token:${GITHUB_TOKEN}@github.com/superawesome-org/sa-continuous-integration.git "${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}"
  
  # bootstrap iOS system
  bootstrap_ios: &bootstrap_ios
    run:
      name: Bootstrap iOS
      command: |
        ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/bootstrap/bootstrap-mobile-ios-sdk.sh

  load_env_vars: &load_env_vars
    run:
      name: Load environment variables from GitHub Token Generator
      command: cat bash.env >> $BASH_ENV

jobs:
  checkout_code:
    <<: *ios_config
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .

  generate_github_token:
    <<: *sa_config
    steps:
      - token-gen/generate:
          scope: read-write
      - run:
          name: Set environment variables for GITHUB
          command: |
            echo "export GITHUB_TOKEN=${GITHUB_TOKEN}" >> $BASH_ENV
            echo "export GIT_COMMITTER_NAME=sa-release-bot" >> $BASH_ENV
            echo "export GIT_COMMITTER_EMAIL=sa-release-bot@superawesome.tv" >> $BASH_ENV
            echo "export GIT_AUTHOR_NAME=sa-release-bot" >> $BASH_ENV
            echo "export GIT_AUTHOR_EMAIL=sa-release-bot@superawesome.tv" >> $BASH_ENV
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env

  swiftlint:
    docker:
      - image: bytesguy/swiftlint:latest
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
    steps:
      - attach_workspace:
          at: .
      - *configure_google_services
      - run: swiftlint lint --reporter junit | tee result.xml
      - store_artifacts:
          path: result.xml
      - store_test_results:
          path: result.xml

  # Run unit tests
  test_superawesome_base_unit_tests:
    <<: *ios_config
    environment:
      SA_IOS_SDKS_SCHEME: "SuperAwesomeExample"
      SA_IOS_SDKS_PATH_TO_WORKSPACE: "Example/SuperAwesomeExample"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *load_env_vars
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - run:
          name: Fastlane
          command: |
            cd Example/SuperAwesomeExampleUITests/MockServer
            /usr/bin/java -jar WireMock.jar &
            cd ../../../
            fastlane run_all_tests
      - store_test_results:
          path: "./fastlane/test_output"
      - store_artifacts:
          path: "./fastlane/test_output"
          destination: scan-test-output
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs
  
  # Run ui tests
  test_superawesome_base_ui_tests:
    <<: *ios_config
    environment:
      IOS_IPHONE_UI_TEST_DEVICE: "iPhone SE (3rd generation) (16.2)"
      IOS_IPAD_UI_TEST_DEVICE: "iPad Pro (11-inch) (4th generation) (16.2)"
      SA_IOS_SDKS_SCHEME: "SuperAwesomeExample - UITests"
      SA_IOS_SDKS_PATH_TO_WORKSPACE: "Example/SuperAwesomeExample"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *load_env_vars
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - run:
          name: Fastlane
          command: |
            cd Example/SuperAwesomeExampleUITests/MockServer
            /usr/bin/java -jar WireMock.jar &
            cd ../../../
            fastlane run_all_tests
      - store_test_results:
          path: "./fastlane/test_output"
      - store_artifacts:
          path: "./fastlane/test_output"
          destination: scan-test-output
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs
  semantic_release_dry_run:
    <<: *ios_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - *load_env_vars
      - *clone_scripts_repo
      - run:
          name: Check semantic release version
          command: |
            ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/mobile/semantic-release/semantic-release-sdks.sh --dry-run
      - persist_to_workspace:
          root: "."
          paths:
            - "nextRelease"
  
  auto_update_release_version:
    <<: *ios_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - *load_env_vars
      - run:
          name: Auto update release version
          command: |
            echo "export NEXT_RELEASE_NUMBER=`cat nextRelease`" >> $BASH_ENV
            echo "export VERSION_PROPERTIES=SuperAwesome/Classes/Common/Model/Version.swift" >> $BASH_ENV
            source $BASH_ENV

            if [[ ( ! -z "$NEXT_RELEASE_NUMBER" ) && ( -f "$VERSION_PROPERTIES" ) ]]; then

              echo "****** Current release version ******"
              cat $VERSION_PROPERTIES

              echo "let SDK_VERSION = \"$NEXT_RELEASE_NUMBER\"" > $VERSION_PROPERTIES

              echo "****** Updated release version ******"
              cat $VERSION_PROPERTIES

              git pull https://x-access-token:${GITHUB_TOKEN}@github.com/superawesome-org/sa-mobile-sdk-ios.git develop
              git add $VERSION_PROPERTIES
              git commit -m "Auto incremented version to $NEXT_RELEASE_NUMBER via Circle CI [skip ci]"
              git push https://x-access-token:${GITHUB_TOKEN}@github.com/superawesome-org/sa-mobile-sdk-ios.git -q develop
            else
              echo "Next release version number not found, no new version to release."
              exit 1
            fi
  
  semantic_release:
    <<: *ios_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - *load_env_vars
      - *clone_scripts_repo
      - run:
          name: Run semantic release
          command: |
            git pull https://x-access-token:${GITHUB_TOKEN}@github.com/superawesome-org/sa-mobile-sdk-ios.git ${SA_SEMANTIC_RELEASE_RUN_BRANCH}
            ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/mobile/semantic-release/semantic-release-sdks.sh
  
  ## Run sdk push - base
  sdk_push_superawesome:
    <<: *ios_config
    environment:
      FL_OUTPUT_DIR: output
      SA_IOS_SDKS_MODULE: "SuperAwesome"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      SA_IOS_SDKS_HAS_PRIVATE_DEPENDENCIES: false
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *load_env_vars
      - run:
          name: Compress
          command: |
            echo "export RELEASE_NUMBER=`cat SuperAwesome/Classes/Common/Model/Version.swift | cut -d '"' -f 2`" >> $BASH_ENV
            source $BASH_ENV
            zip -vr "SuperAwesome-${RELEASE_NUMBER}.zip" SuperAwesome/ -x "*.DS_Store"
      - run:
          name: Rename readme file
          command: |
            cp README.md "SuperAwesome-$RELEASE_NUMBER-README.md"
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - aws-s3/copy:
          from: "SuperAwesome-${RELEASE_NUMBER}.zip"
          to: "${SA_IOS_SDKS_S3_PUBLIC_REPO}/SuperAwesome/${RELEASE_NUMBER}/"
          aws-access-key-id: SA_IOS_APPS_S3_REPO_KEY
          aws-region: SA_IOS_APPS_S3_REGION
          aws-secret-access-key: SA_IOS_APPS_S3_REPO_SECRET
      - aws-s3/copy:
          from: "SuperAwesome-${RELEASE_NUMBER}-README.md"
          to: "${SA_IOS_SDKS_S3_PUBLIC_REPO}/SuperAwesome/${RELEASE_NUMBER}/"
          aws-access-key-id: SA_IOS_APPS_S3_REPO_KEY
          aws-region: SA_IOS_APPS_S3_REGION
          aws-secret-access-key: SA_IOS_APPS_S3_REPO_SECRET
      - run:
          name: Update Release page in docs
          command: |
            # get previous release tag
            export CURRENT_VERSION=`git tag -l 'v*' --sort=-refname | sed -n 1p`
            export PREVIOUS_VERSION=`git tag -l 'v*' --sort=-refname | sed -n 2p`

            # get release notes from semantic-release
            export CHANGES=`awk "/^([#]+ \[${CURRENT_VERSION:1}\])/{flag=1;next}/^([#]+ \[${PREVIOUS_VERSION:1}\])/{flag=0}flag" CHANGELOG.md`

            touch select_changes.txt
            echo "$CHANGES" > select_changes.txt
            perl -i -pe 's/ \(\[([^\[]+)\](\(.*\))//g' select_changes.txt
            export CHANGES=`cat select_changes.txt`

            echo "CURRENT_VERSION ${CURRENT_VERSION}"
            echo "PREVIOUS_VERSION ${PREVIOUS_VERSION}"
            echo "Changes Found ${CHANGES}"

            # checkout docs repo
            git clone https://x-access-token:${GITHUB_TOKEN}@github.com/superawesome-org/sa-mobile-sdk-publisher-docs.git

            # Update releases
            export RELEASE_DOC_PATH="sa-mobile-sdk-publisher-docs/docs/_docs/ios/releases.md"

            # insert new release and change log

            export CLEAN_CURRENT_VERSION="${CURRENT_VERSION:1}"
            perl -i -pe '$_ = "\n## $ENV{CLEAN_CURRENT_VERSION}$ENV{CHANGES}\n$_" if $. == 7' $RELEASE_DOC_PATH

            # update config file release version
            export CONFIG_PATH="sa-mobile-sdk-publisher-docs/docs/_config.yml"

            sed -i '' "s/ios_latest_version:.*/ios_latest_version: ${CURRENT_VERSION:1}/g" $CONFIG_PATH

            # commit and push
            cd sa-mobile-sdk-publisher-docs
            git add docs/_docs/ios/releases.md
            git add docs/_config.yml
            git commit -m "Add iOS release version $CURRENT_VERSION via Circle CI"
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/superawesome-org/sa-mobile-sdk-publisher-docs.git -q main
      - run:
          name: Push Superawesome to cocoapods
          command: fastlane sdk_push isPrivateRepo:false skipVersionBump:true
  
  ## Run sdk push - admob
  sdk_push_superawesome_admob:
    <<: *ios_config
    environment:
      FL_OUTPUT_DIR: output
      SA_IOS_SDKS_MODULE: "SuperAwesomeAdMob"
      SA_IOS_SDKS_PODFILE_PATH: "./Example/Podfile"
      SA_IOS_SDKS_HAS_PRIVATE_DEPENDENCIES: false
      TERM: xterm-256color
    steps:
      - attach_workspace:
          at: .
      - *load_env_vars
      - *clone_scripts_repo
      - *bootstrap_ios
      - *configure_google_services
      - run:
          name: Compress
          command: |
            echo "export RELEASE_NUMBER=`cat SuperAwesome/Classes/Common/Model/Version.swift | cut -d '"' -f 2`" >> $BASH_ENV
            source $BASH_ENV
            zip -vr "SuperAwesomeAdMob-${RELEASE_NUMBER}.zip" SuperAwesomeAdMob/ -x "*.DS_Store"
      - aws-s3/copy:
          from: "SuperAwesomeAdMob-${RELEASE_NUMBER}.zip"
          to: "${SA_IOS_SDKS_S3_PUBLIC_REPO}/SuperAwesomeAdMob/${RELEASE_NUMBER}/"
          aws-access-key-id: SA_IOS_APPS_S3_REPO_KEY
          aws-region: SA_IOS_APPS_S3_REGION
          aws-secret-access-key: SA_IOS_APPS_S3_REPO_SECRET
      - run:
          name: Push Superawesome-AdMob to cocoapods
          command: |
            pod repo update
            fastlane sdk_push podSpec:SuperAwesomeAdMob isPrivateRepo:false skipVersionBump:true

workflows:
  # nightly:
  #   triggers:
  #     - schedule:
  #         cron: "0 7 * * 1-5"
  #         filters:
  #           branches:
  #             only:
  #               - develop
    
  #   jobs:
  #     - generate_github_token:
  #         context: Build
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/\
              
  #     - checkout_code:
  #         context: MOBILE_IOS_SDKS
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/\
      
  #     - test_superawesome_base_ui_tests:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - checkout_code
  #           - generate_github_token
  #         filters:
  #           branches:
  #             only: develop
            
  #           tags:
  #             ignore: /^v.*/\

  # pull_request:
  #   jobs:
  #     - checkout_code:
  #         context: MOBILE_IOS_SDKS
  #         filters:
  #           branches:
  #             ignore: develop
  #           tags:
  #             ignore: /^v.*/\

  #     - generate_github_token:
  #         context: Build
  #         filters:
  #           branches:
  #             ignore: develop
  #           tags:
  #             ignore: /^v.*/

  #     - swiftlint:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - checkout_code
  #         filters:
  #           branches:
  #             ignore: develop
  #           tags:
  #             ignore: /^v.*/

  #     - test_superawesome_base_unit_tests:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - checkout_code
  #           - generate_github_token
  #         filters:
  #           branches:
  #             ignore: develop
  #           tags:
  #             ignore: /^v.*/

  #     - test_superawesome_base_ui_tests:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - checkout_code
  #           - generate_github_token
  #         filters:
  #           branches:
  #             only: /ui-tests\/.*/
  #           tags:
  #             ignore: /^v.*/
  
  # develop:
  #   jobs:
  #     - checkout_code:
  #         context: MOBILE_IOS_SDKS
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/\

  #     - generate_github_token:
  #         context: Build
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/\

  #     - swiftlint:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - checkout_code
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/\

  #     - test_superawesome_base_unit_tests:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - checkout_code
  #           - generate_github_token
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/\

  #     - semantic_release_dry_run:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - test_superawesome_base_unit_tests
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/

  #     - approve_dry_run_and_release:
  #         type: approval
  #         requires:
  #           - semantic_release_dry_run
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/

  #     - auto_update_release_version:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - approve_dry_run_and_release
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/

  #     - semantic_release:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - auto_update_release_version
  #         filters:
  #           branches:
  #             only: develop
  #           tags:
  #             ignore: /^v.*/
  
  # release:
  #   jobs:
  #     - checkout_code:
  #         context: MOBILE_IOS_SDKS
  #         filters:
  #           branches:
  #             ignore: /.*/
  #           tags:
  #             only: /^v.*/
  #     - generate_github_token:
  #         context: Build
  #         filters:
  #           branches:
  #             ignore: /.*/
  #           tags:
  #             only: /^v.*/\

  #     - sdk_push_superawesome:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - checkout_code
  #           - generate_github_token
  #         filters:
  #           branches:
  #             ignore: /.*/
  #           tags:
  #             only: /^v.*/\

  #     - sdk_push_superawesome_admob:
  #         context: MOBILE_IOS_SDKS
  #         requires:
  #           - sdk_push_superawesome
  #         filters:
  #           branches:
  #             ignore: /.*/
  #           tags:
  #             only: /^v.*/\
